/*******************************************************************************
 * @author Reika Kalseki
 * 
 * Copyright 2017
 * 
 * All rights reserved.
 * Distribution of the software in any form is only allowed with
 * explicit, prior permission from the owner.
 ******************************************************************************/
// Date: 29/06/2015 6:15:29 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Reika.RotaryCraft.Models.Animated;

import java.util.ArrayList;

import org.lwjgl.opengl.GL11;

import net.minecraft.tileentity.TileEntity;

import Reika.DragonAPI.Instantiable.Rendering.LODModelPart;
import Reika.RotaryCraft.Base.RotaryModelBase;

public class ModelChunkLoader extends RotaryModelBase
{
	//fields
	LODModelPart Shape1;
	LODModelPart Shape2;
	LODModelPart Shape21;
	LODModelPart Shape3d;
	LODModelPart Shape4;
	LODModelPart Shape4a;
	LODModelPart Shape4b;
	LODModelPart Shape32d;
	LODModelPart Shape3b;
	LODModelPart Shape3c;
	LODModelPart Shape4d;
	LODModelPart Shape2d;
	LODModelPart Shape2c;
	LODModelPart Shape2b;
	LODModelPart Shape21d;
	LODModelPart Shape21c;
	LODModelPart Shape21b;
	LODModelPart Shape3;
	LODModelPart Shape31d;
	LODModelPart Shape32;
	LODModelPart Shape32b;
	LODModelPart Shape32c;
	LODModelPart Shape31;
	LODModelPart Shape31b;
	LODModelPart Shape31c;

	public ModelChunkLoader()
	{
		textureWidth = 128;
		textureHeight = 128;

		Shape1 = new LODModelPart(this, 0, 0);
		Shape1.addBox(0F, 0F, 0F, 16, 3, 16);
		Shape1.setRotationPoint(-8F, 21F, -8F);
		Shape1.setTextureSize(128, 128);
		Shape1.mirror = true;
		this.setRotation(Shape1, 0F, 0F, 0F);
		Shape2 = new LODModelPart(this, 0, 20);
		Shape2.addBox(-1F, 0F, -1F, 2, 2, 2);
		Shape2.setRotationPoint(0F, 19F, 0F);
		Shape2.setTextureSize(128, 128);
		Shape2.mirror = true;
		this.setRotation(Shape2, 0F, 0.7853982F, 0F);
		Shape21 = new LODModelPart(this, 0, 20);
		Shape21.addBox(-1F, 0F, -1F, 2, 2, 2);
		Shape21.setRotationPoint(0F, 19F, 0F);
		Shape21.setTextureSize(128, 128);
		Shape21.mirror = true;
		this.setRotation(Shape21, 0F, 0F, 0F);
		Shape3d = new LODModelPart(this, 0, 26);
		Shape3d.addBox(-3F, 0F, -1F, 6, 1, 2);
		Shape3d.setRotationPoint(0F, 10.5F, 0F);
		Shape3d.setTextureSize(128, 128);
		Shape3d.mirror = true;
		this.setRotation(Shape3d, 0F, 0F, 0F);
		Shape4 = new LODModelPart(this, 65, 0);
		Shape4.addBox(-1.5F, 0F, -1.5F, 3, 1, 3);
		Shape4.setRotationPoint(0F, 9F, 0F);
		Shape4.setTextureSize(128, 128);
		Shape4.mirror = true;
		this.setRotation(Shape4, 0F, 0F, 0F);
		Shape4a = new LODModelPart(this, 65, 0);
		Shape4a.addBox(-1.5F, 0F, -1.5F, 3, 1, 3);
		Shape4a.setRotationPoint(0F, 18F, 0F);
		Shape4a.setTextureSize(128, 128);
		Shape4a.mirror = true;
		this.setRotation(Shape4a, 0F, 0F, 0F);
		Shape4b = new LODModelPart(this, 65, 0);
		Shape4b.addBox(-1.5F, 0F, -1.5F, 3, 1, 3);
		Shape4b.setRotationPoint(0F, 15F, 0F);
		Shape4b.setTextureSize(128, 128);
		Shape4b.mirror = true;
		this.setRotation(Shape4b, 0F, 0F, 0F);
		Shape32d = new LODModelPart(this, 24, 26);
		Shape32d.addBox(1F, 0F, -2F, 2, 1, 1);
		Shape32d.setRotationPoint(0F, 10.5F, 0F);
		Shape32d.setTextureSize(128, 128);
		Shape32d.mirror = true;
		this.setRotation(Shape32d, 0F, 0F, 0F);
		Shape3b = new LODModelPart(this, 0, 34);
		Shape3b.addBox(-5F, 0F, -1F, 10, 1, 2);
		Shape3b.setRotationPoint(0F, 16.5F, 0F);
		Shape3b.setTextureSize(128, 128);
		Shape3b.mirror = true;
		this.setRotation(Shape3b, 0F, 0F, 0F);
		Shape3c = new LODModelPart(this, 0, 30);
		Shape3c.addBox(-4F, 0F, -1F, 8, 1, 2);
		Shape3c.setRotationPoint(0F, 13.5F, 0F);
		Shape3c.setTextureSize(128, 128);
		Shape3c.mirror = true;
		this.setRotation(Shape3c, 0F, 0F, 0F);
		Shape4d = new LODModelPart(this, 65, 0);
		Shape4d.addBox(-1.5F, 0F, -1.5F, 3, 1, 3);
		Shape4d.setRotationPoint(0F, 12F, 0F);
		Shape4d.setTextureSize(128, 128);
		Shape4d.mirror = true;
		this.setRotation(Shape4d, 0F, 0F, 0F);
		Shape2d = new LODModelPart(this, 0, 20);
		Shape2d.addBox(-1F, 0F, -1F, 2, 2, 2);
		Shape2d.setRotationPoint(0F, 10F, 0F);
		Shape2d.setTextureSize(128, 128);
		Shape2d.mirror = true;
		this.setRotation(Shape2d, 0F, 0.7853982F, 0F);
		Shape2c = new LODModelPart(this, 0, 20);
		Shape2c.addBox(-1F, 0F, -1F, 2, 2, 2);
		Shape2c.setRotationPoint(0F, 13F, 0F);
		Shape2c.setTextureSize(128, 128);
		Shape2c.mirror = true;
		this.setRotation(Shape2c, 0F, 0.7853982F, 0F);
		Shape2b = new LODModelPart(this, 0, 20);
		Shape2b.addBox(-1F, 0F, -1F, 2, 2, 2);
		Shape2b.setRotationPoint(0F, 16F, 0F);
		Shape2b.setTextureSize(128, 128);
		Shape2b.mirror = true;
		this.setRotation(Shape2b, 0F, 0.7853982F, 0F);
		Shape21d = new LODModelPart(this, 0, 20);
		Shape21d.addBox(-1F, 0F, -1F, 2, 2, 2);
		Shape21d.setRotationPoint(0F, 10F, 0F);
		Shape21d.setTextureSize(128, 128);
		Shape21d.mirror = true;
		this.setRotation(Shape21d, 0F, 0F, 0F);
		Shape21c = new LODModelPart(this, 0, 20);
		Shape21c.addBox(-1F, 0F, -1F, 2, 2, 2);
		Shape21c.setRotationPoint(0F, 13F, 0F);
		Shape21c.setTextureSize(128, 128);
		Shape21c.mirror = true;
		this.setRotation(Shape21c, 0F, 0F, 0F);
		Shape21b = new LODModelPart(this, 0, 20);
		Shape21b.addBox(-1F, 0F, -1F, 2, 2, 2);
		Shape21b.setRotationPoint(0F, 16F, 0F);
		Shape21b.setTextureSize(128, 128);
		Shape21b.mirror = true;
		this.setRotation(Shape21b, 0F, 0F, 0F);
		Shape3 = new LODModelPart(this, 0, 40);
		Shape3.addBox(-6F, 0F, -1F, 12, 1, 2);
		Shape3.setRotationPoint(0F, 19.5F, 0F);
		Shape3.setTextureSize(128, 128);
		Shape3.mirror = true;
		this.setRotation(Shape3, 0F, 0F, 0F);
		Shape31d = new LODModelPart(this, 17, 26);
		Shape31d.addBox(-3F, 0F, 1F, 2, 1, 1);
		Shape31d.setRotationPoint(0F, 10.5F, 0F);
		Shape31d.setTextureSize(128, 128);
		Shape31d.mirror = true;
		this.setRotation(Shape31d, 0F, 0F, 0F);
		Shape32 = new LODModelPart(this, 42, 40);
		Shape32.addBox(4F, 0F, -5F, 2, 1, 4);
		Shape32.setRotationPoint(0F, 19.5F, 0F);
		Shape32.setTextureSize(128, 128);
		Shape32.mirror = true;
		this.setRotation(Shape32, 0F, 0F, 0F);
		Shape32b = new LODModelPart(this, 36, 34);
		Shape32b.addBox(3F, 0F, -4F, 2, 1, 3);
		Shape32b.setRotationPoint(0F, 16.5F, 0F);
		Shape32b.setTextureSize(128, 128);
		Shape32b.mirror = true;
		this.setRotation(Shape32b, 0F, 0F, 0F);
		Shape32c = new LODModelPart(this, 30, 30);
		Shape32c.addBox(2F, 0F, -3F, 2, 1, 2);
		Shape32c.setRotationPoint(0F, 13.5F, 0F);
		Shape32c.setTextureSize(128, 128);
		Shape32c.mirror = true;
		this.setRotation(Shape32c, 0F, 0F, 0F);
		Shape31 = new LODModelPart(this, 29, 40);
		Shape31.addBox(-6F, 0F, 1F, 2, 1, 4);
		Shape31.setRotationPoint(0F, 19.5F, 0F);
		Shape31.setTextureSize(128, 128);
		Shape31.mirror = true;
		this.setRotation(Shape31, 0F, 0F, 0F);
		Shape31b = new LODModelPart(this, 25, 34);
		Shape31b.addBox(-5F, 0F, 1F, 2, 1, 3);
		Shape31b.setRotationPoint(0F, 16.5F, 0F);
		Shape31b.setTextureSize(128, 128);
		Shape31b.mirror = true;
		this.setRotation(Shape31b, 0F, 0F, 0F);
		Shape31c = new LODModelPart(this, 21, 30);
		Shape31c.addBox(-4F, 0F, 1F, 2, 1, 2);
		Shape31c.setRotationPoint(0F, 13.5F, 0F);
		Shape31c.setTextureSize(128, 128);
		Shape31c.mirror = true;
		this.setRotation(Shape31c, 0F, 0F, 0F);
	}

	@Override
	public void renderAll(TileEntity te, ArrayList li, float phi, float theta)
	{
		Shape1.render(te, f5);
		Shape2.render(te, f5);
		Shape21.render(te, f5);
		Shape4.render(te, f5);
		Shape4a.render(te, f5);
		Shape4b.render(te, f5);
		Shape4d.render(te, f5);
		Shape2d.render(te, f5);
		Shape2c.render(te, f5);
		Shape2b.render(te, f5);
		Shape21d.render(te, f5);
		Shape21c.render(te, f5);
		Shape21b.render(te, f5);

		GL11.glPushMatrix();
		GL11.glRotated(phi, 0, 1, 0);
		Shape3d.render(te, f5);
		Shape31d.render(te, f5);
		Shape32d.render(te, f5);

		GL11.glRotated(phi, 0, 1, 0);
		Shape3c.render(te, f5);
		Shape31c.render(te, f5);
		Shape32c.render(te, f5);

		GL11.glRotated(phi, 0, 1, 0);
		Shape3b.render(te, f5);
		Shape31b.render(te, f5);
		Shape32b.render(te, f5);

		GL11.glRotated(phi, 0, 1, 0);

		Shape3.render(te, f5);
		Shape31.render(te, f5);
		Shape32.render(te, f5);

		GL11.glPopMatrix();
	}

}
